{{- if .Values.templates.dfspSettlement -}}

apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: {{ printf "%s-%s" .Release.Name "dfsp-settlement" | trimPrefix "-" }}
spec:
  permission: report-dfsp-settlement
  endpoint:
    path: /dfspSettlement
    params:
      - name: settlementId
        required: true
      - name: dfspId
        required: true
  queries:
    - name: dfspInfo
      query: |
        SELECT participantId, name FROM participant WHERE name = :dfspId AND name != 'Hub'
    - name: report
      query: |
        SELECT settlementId,
               settlementWindowId,
               p.participantId,
               p.name,
               currencyId,
               currencyScale,
               sentAmount,
               sentVolume,
               receivedAmount,
               receivedVolume,
               (sentAmount + receivedAmount) as totalAmount,
               (sentVolume + receivedVolume) as totalVolume,
               receivedAmount - sentAmount as netAmount,
               s3.createdDate,
                lastActionDate
        FROM participant p INNER JOIN
             (
                 SELECT settlementId,
                        settlementWindowId,
                        MAX(currencyId) as currencyId,
                        MAX(currencyScale) as currencyScale,
                        participantId,
                        SUM(sentAmount)     as sentAmount,
                        SUM(sentVolume)     as sentVolume,
                        SUM(receivedAmount) as receivedAmount,
                        SUM(receivedVolume) as receivedVolume,
                        MAX(createdDate) as createdDate,
                        MAX(lastActionDate) as lastActionDate
                 FROM (
                          SELECT settlementId,
                                 settlementWindowId,
                                 MAX(createdDate) as createdDate,
                                 MAX(lastActionDate) as lastActionDate,
                                 MAX(currencyId) as currencyId,
                                 MAX(currencyScale) as currencyScale,
                                 IF(senderName != :dfspId, senderId, receiverId) as participantId,
                                 SUM(IF(senderName = :dfspId, amount, 0))       as sentAmount,
                                 SUM(IF(senderName = :dfspId, volume, 0))       as sentVolume,
                                 SUM(IF(receiverName = :dfspId, amount, 0))     as receivedAmount,
                                 SUM(IF(receiverName = :dfspId, volume, 0))     as receivedVolume
                          FROM (
                                   SELECT MAX(CASE WHEN tP.amount > 0 THEN p.participantId END) as senderId,
                                          MAX(CASE WHEN tP.amount < 0 THEN p.participantId END) as receiverId,
                                          MAX(CASE WHEN tP.amount > 0 THEN p.name END)          as senderName,
                                          MAX(CASE WHEN tP.amount < 0 THEN p.name END)          as receiverName,
                                          MAX(tP.amount)                                        as amount,
                                          MAX(c.currencyId)                                     as currencyId,
                                          MAX(c.scale)                                          as currencyScale,
                                          COUNT(DISTINCT (tF.transferId))                       as volume,
                                          s.settlementId,
                                          sSW.settlementWindowId,
                                          MAX(s.createdDate) as createdDate,
                                          MAX(tF.completedDate)                        as lastActionDate
                                   FROM transferParticipant tP
                                            INNER JOIN transferFulfilment tF on tP.transferId = tF.transferId
                                            INNER JOIN settlementSettlementWindow sSW
                                                       on tF.settlementWindowId = sSW.settlementWindowId
                                            INNER JOIN settlementWindowStateChange sWSC
                                                       on sSW.settlementWindowId = sWSC.settlementWindowId
                                            INNER JOIN settlement s on sSW.settlementId = s.settlementId
                                            INNER JOIN participantCurrency pC
                                                       on tP.participantCurrencyId = pC.participantCurrencyId
                                            INNER JOIN currency c on c.currencyId = pC.currencyId
                                            INNER JOIN participant p on pC.participantId = p.participantId
                                   WHERE tF.isValid
                                     AND sWSC.settlementWindowStateId = 'CLOSED'
                                     AND s.settlementId = :settlementId
                                   GROUP BY tF.transferId, s.settlementId
                               ) s
                          WHERE s.senderName = :dfspId
                             OR s.receiverName = :dfspId
                          GROUP BY settlementId, settlementWindowId, senderId, receiverId, senderName, receiverName
                      ) s2

                 GROUP BY settlementId, settlementWindowId, participantId
             ) s3 ON p.participantId = s3.participantId
        WHERE p.name != 'Hub'
        ORDER BY p.name, settlementWindowId
  template: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <style>
            table {
                font-family: Calibri;
                font-size: 11pt;
                border-collapse: collapse;
                width: 100%;
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }

            th {
                border: 1px solid black;
                text-align: left;
                padding: 8px;
            }

            td {
                border: 1px solid black;
                padding: 8px;
            }

            tr:nth-child(even) {
    //            background-color: #efefef;
            }

            td > span {
                font-weight: bold;
            }
            tr.noborder td {
                border: none;
            }
        </style>
        <title>FSP Settlement Report</title>
    </head>
    <body>

    <%
    const formatAmount = (amount, currency, scale) => {
      const v = parseFloat(amount).toLocaleString('en-US', { minimumFractionDigits: scale });
      return `${v} ${currency}`;
    }
    const formatNetPosition = (amount, currency, scale) => {
        const v = parseFloat(amount);
        const vf = Math.abs(v).toLocaleString('en-US', { minimumFractionDigits: scale });
        return v >= 0 ? `${vf} ${currency}` : `(${vf}) ${currency}`;
    }
    %>

    <table data-json="<%= JSON.stringify(report) %>" data-sheet-name="<%= `${element?.name}-${element?.currencyId}` %>">
        <tr>
            <td><span>Report for:</span></td>
            <td><span>FSP ID</span></td>
            <td><%= dfspInfo[0]?.name %></td>
            <td><span>Settlement ID</span></td>
            <td style="text-align: right"><%= report[0]?.settlementId %></td>
            <td></td>
            <td></td>
            <td><span>Created Date</span></td>
            <td colspan="2" style="text-align: right"><%= report[0] && (d = report[0].createdDate, `${d.toLocaleDateString('en-ZA')} ${d.toLocaleTimeString('en-US')}`)%></td>
        </tr>
        <tr class = "noborder">
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td style="border: 1px solid black"><span>Last Action Date</span></td>
            <td colspan="2" style="text-align: right;border: 1px solid black"><%=
                report[0] &&
                (d = report
                        .filter(a => a.lastActionDate)
                        .reduce((a,b) => a.lastActionDate.getTime() > b.lastActionDate.getTime() ? a : b).lastActionDate,
                        `${d.toLocaleDateString('en-ZA')} ${d.toLocaleTimeString('en-US')}`)
                %></td>
        </tr>
        <tr class = "noborder">
            <td colspan="100%" style="padding-top: 20px"></td>
        </tr>
        <tr>
            <th>Window ID</th>
            <th>FSP ID</th>
            <th>Sent to FSP</th>
            <th></th>
            <th>Received from FSP</th>
            <th></th>
            <th>Total</th>
            <th>Total Value of All Transactions</th>
            <th>Net Position vs. Each DFSP</th>
        </tr>
        <tr>
            <th></th>
            <th></th>
            <th>Volume</th>
            <th>Value</th>
            <th>Volume</th>
            <th>Value</th>
            <th>Volume</th>
            <th></th>
            <th></th>
        </tr>
        <% for(let entry of report) { %>
            <tr style="text-align: right">
                <td><%= entry.settlementWindowId %></td>
                <td style="text-align: left"><%= entry.name %></td>
                <td><%= entry.sentVolume %></td>
                <td><%= formatAmount(entry.sentAmount, entry.currencyId, entry.currencyScale) %></td>
                <td><%= entry.receivedVolume %></td>
                <td><%= formatAmount(entry.receivedAmount, entry.currencyId, entry.currencyScale) %></td>
                <td><%= entry.totalVolume %></td>
                <td><%= formatAmount(entry.totalAmount, entry.currencyId, entry.currencyScale) %></td>
                <td><%= formatNetPosition(entry.netAmount, entry.currencyId, entry.currencyScale) %></td>
            </tr>
        <% } %>

        <tr>
            <td colspan="8" style="padding-top: 15px"><span>Aggregated Net Positions</span></td>
            <td style="text-align: right"><%= report[0] && formatNetPosition(report.reduce((a, b) => a + (parseFloat(b.netAmount) || 0), 0), report[0]?.currencyId, report[0]?.currencyScale) %></td>
        </tr>
    </table>
    </body>
    </html>
    
{{- end }}    
